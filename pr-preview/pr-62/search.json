[{"path":[]},{"path":"/articles/benchmark_dplyr_vs_rsql.html","id":"question","dir":"Articles","previous_headings":"Motivation","what":"Question","title":"Benchmarking dplyr vs RSQL","text":"Y--t-il une différence de performance sur le portail entre manipuler les données avec la syntaxe dplyr ou en injectant du SQL directement dans une requête de DBI::dbExecute ?","code":""},{"path":"/articles/benchmark_dplyr_vs_rsql.html","id":"description-du-benchmark","dir":"Articles","previous_headings":"Motivation","what":"Description du benchmark","title":"Benchmarking dplyr vs RSQL","text":"La période retenue est 2020-2023. Le benchmark étudie le temps pris par les deux solutions de façon incrémentale : 1 mois, 1 ans, 2 ans, 3 ans. L’extraction est faite en bouclant par mois sur la date de flux.","code":""},{"path":[]},{"path":"/articles/benchmark_dplyr_vs_rsql.html","id":"comparaison-des-performances-entre-dplyr-et-rsql","dir":"Articles","previous_headings":"Code de benchmark","what":"Comparaison des performances entre dplyr et RSQL","title":"Benchmarking dplyr vs RSQL","text":"","code":"library(sndsTools)  # Paramètres d'extraction atc_vitamine_d_7 <- c(\"M05BB03\", \"M05BB04\", \"A11CC05\", \"A11CC01\", \"A12CD51\")  atc_vitamine_d_5 <- c(\"A12AX\", \"A11JA\", \"A11BA\")  cip_vitamine_d_b <- c(3400935657190, 3400936584969, 3400936923751, 3400934880254)  # Colonnes supplémentaires pour la fonction `extract_drug_dispenses`. # Ces colonnes sont extraites par défaut dans la fonction `sql_extract_drug_dispenses`. sup_columns <- c(   \"BEN_CMU_TOP\",   \"BEN_AMA_COD\",   \"BEN_SEX_COD\",   \"BEN_RES_DPT\",   \"FLX_DIS_DTD\",   \"PRS_ACT_QTE\",   \"BSE_REM_MNT\",   \"BSE_PRS_NAT\",   \"ETE_IND_TAA\",   \"ETB_EXE_FIN\",   \"ETE_MCO_DDP\",   \"PHA_GRD_CND\",   \"PHA_PRS_IDE\",   \"PHA_DEC_TOP\",   \"PHA_DEC_QSU\" )  conn <- connect_oracle()  start_dates <- rep(as.Date(\"2020-01-01\"), 3) end_dates <- c(   # as.Date(\"2020-02-01\"),   as.Date(\"2021-01-01\"),   as.Date(\"2022-01-01\"),   as.Date(\"2023-01-01\") )  path2_tmp <- file.path(\"../inst/extdata\")    for (i in seq_along(start_dates)) {   start_date <- start_dates[i]   end_date <- end_dates[i]   message(\"Extraction pour la période : \", start_date, \" - \", end_date)    # benchmark de dplyr   formatted_study_dates <- glue::glue('{format(start_date, \"%Y%m%d\")}_{format(end_date, \"%Y%m%d\")}')   dplyr_table_name <- glue::glue(\"dplyr_{formatted_study_dates}\")   time_0_dplyr <- Sys.time()   extract_drug_dispenses(     start_date = start_date,     end_date = end_date,     atc_cod_starts_with_filter = atc_vitamine_d_7,     cip13_cod_filter = cip_vitamine_d_b,     output_table_name = dplyr_table_name,     sup_columns = sup_columns,     conn = conn   )   time_taken_dplyr <- as.numeric(lubridate::as.duration(Sys.time() - time_0_dplyr), \"seconds\")   n_rows_dplyr <- DBI::dbGetQuery(conn, glue::glue(\"select count(*) from {dplyr_table_name}\"))   # tmp_table_dplyr <- DBI::dbGetQuery(conn, glue::glue(\"select * from {dplyr_table_name}\"))   # tmp_table_path <- file.path(path2_tmp, paste0(dplyr_table_name, \".parquet\"))   # arrow::write_parquet(tmp_table_dplyr, tmp_table_path)    dbExecute(conn, glue::glue(\"DROP TABLE {dplyr_table_name}\"))    # benchmark de RSQL   sql_table_name <- glue::glue(\"sql_{formatted_study_dates}\")   time_0_sql <- Sys.time()   sql_extract_drug_dispenses(     start_date = start_date,     end_date = end_date,     atc_cod_starts_with_filter = atc_vitamine_d_7,     cip13_cod_filter = cip_vitamine_d_b,     output_table_name = sql_table_name,     conn = conn   )   time_taken_sql <- as.numeric(lubridate::as.duration(Sys.time() - time_0_sql), \"seconds\")   n_rows_sql <- DBI::dbGetQuery(conn, glue::glue(\"select count(*) from {sql_table_name}\"))   # tmp_table_sql <- DBI::dbGetQuery(conn, glue::glue(\"select * from {sql_table_name}\"))   # tmp_table_path <- file.path(path2_tmp, paste0(sql_table_name, \".parquet\"))   # arrow::write_parquet(tmp_table_sql, tmp_table_path)    # enregistrement des résultats   tmp_timing_results <- data.frame(     start_date = as.character(start_date),     end_date = as.character(end_date),     time_taken_dplyr = time_taken_dplyr,     time_taken_sql = time_taken_sql,     n_rows_dplyr = n_rows_dplyr,     n_rows_sql = n_rows_sql   )   dbExecute(conn, glue::glue(\"DROP TABLE {sql_table_name}\"))    write.table(     tmp_timing_results,     file.path(\"..\", \"inst\", \"extdata\", \"timing_results.csv\"),     append = i > 1,     row.names = FALSE,     col.names = i == 1,     sep = \",\"   ) }"},{"path":"/articles/benchmark_dplyr_vs_rsql.html","id":"evaluation-de-la-vitesse-dextraction-dplyr-en-fonction-du-nombre-de-lignes-et-de-colonnes-extraites","dir":"Articles","previous_headings":"Code de benchmark","what":"Evaluation de la vitesse d’extraction dplyr en fonction du nombre de lignes et de colonnes extraites","title":"Benchmarking dplyr vs RSQL","text":"Le code suivant effectue différent test pour évaluer la sensibilité de la vitesse d’extraction de dplyr en fonction du nombre de lignes et de colonnes extraites.","code":"library(sndsTools)  # Paramètres d'extraction atc_vitamine_d_7 <- c(\"M05BB03\", \"M05BB04\", \"A11CC05\", \"A11CC01\", \"A12CD51\") atc_vitamine_d_5 <- c(\"A12AX\", \"A11JA\", \"A11BA\") cip_vitamine_d_b <- c(3400935657190, 3400936584969, 3400936923751, 3400934880254)  # Colonnes supplémentaires pour la fonction `extract_drug_dispenses`. # Ces colonnes sont extraites par défaut dans la fonction `sql_extract_drug_dispenses`. columns_to_extract <- c(   \"BEN_CMU_TOP\",   \"BEN_AMA_COD\",   \"BEN_SEX_COD\",   \"BEN_RES_DPT\",   \"FLX_DIS_DTD\",   \"PRS_ACT_QTE\",   \"BSE_REM_MNT\",   \"BSE_PRS_NAT\",   \"ETE_IND_TAA\",   \"ETB_EXE_FIN\",   \"ETE_MCO_DDP\",   \"PHA_GRD_CND\",   \"PHA_PRS_IDE\",   \"PHA_DEC_TOP\",   \"PHA_DEC_QSU\" )  conn <- connect_oracle()  start_dates <- rep(as.Date(\"2020-01-01\"), 2) end_dates <- c(   as.Date(\"2020-02-01\"),   as.Date(\"2021-01-01\") )  columns_to_extract_list_length <- c(5, 10, 15)  for (i in seq_along(start_dates)) {   for (j in seq_along(columns_to_extract_list_length)) {     start_date <- start_dates[i]     end_date <- end_dates[i]     sup_columns <- columns_to_extract[1:columns_to_extract_list_length[j]]     message(\"Extraction pour la période : \", start_date, \" - \", end_date, \" avec \", columns_to_extract_list_length[j], \" colonnes supplémentaires\")      # benchmark de dplyr     formatted_study_dates <- glue::glue(       '{format(start_date, \"%Y%m%d\")}_{format(end_date, \"%Y%m%d\")}'     )     dplyr_table_name <- glue::glue(\"dplyr_{formatted_study_dates}\")     time_0_dplyr <- Sys.time()     extract_drug_dispenses(       start_date = start_date,       end_date = end_date,       atc_cod_starts_with_filter = atc_vitamine_d_7,       cip13_cod_filter = cip_vitamine_d_b,       output_table_name = dplyr_table_name,       sup_columns = sup_columns,       conn = conn     )     time_taken_dplyr <- as.numeric(lubridate::as.duration(Sys.time() - time_0_dplyr), \"seconds\")     df_dplyr <- DBI::dbGetQuery(conn, glue::glue(\"select * from {dplyr_table_name}\"))     n_rows_dplyr <- nrow(df_dplyr)     dbExecute(conn, glue::glue(\"DROP TABLE {dplyr_table_name}\"))      # enregistrement des résultats     tmp_timing_results <- data.frame(       start_date = as.character(start_date),       end_date = as.character(end_date),       time_taken_dplyr = time_taken_dplyr,       n_rows_dplyr = n_rows_dplyr,       n_cols_dplyr = 6 + length(sup_columns)     )      top_create_file <- (i == 1) && (j == 1)     write.table(       tmp_timing_results,       file.path(\"..\", \"inst\", \"extdata\", \"timing_results_cols.csv\"),       append = !top_create_file,       row.names = FALSE,       col.names = top_create_file,       sep = \",\"     )   } }"},{"path":[]},{"path":"/articles/benchmark_dplyr_vs_rsql.html","id":"benchmark-dplyrrsql","dir":"Articles","previous_headings":"Résultats","what":"benchmark dplyr/RSQL","title":"Benchmarking dplyr vs RSQL","text":"","code":"library(sndsTools) path2pkg_data <- system.file(\"extdata\", package = \"sndsTools\") # path2pkg_data <- \"../inst/extdata\" timing_results <- read.csv(file.path(path2pkg_data, \"benchmark_rsql_dplyr.csv\")) |>   dplyr::mutate(     time_taken_dplyr_minutes = time_taken_dplyr / 60,     time_taken_sql_minutes = time_taken_sql / 60,     query_period_days = as.numeric(as.Date(end_date) - as.Date(start_date)),     query_period_months = as.integer(query_period_days / 30),     speed_dplyr_nrows_sec = n_rows_dplyr / time_taken_dplyr,     speed_sql_nrows_sec = n_rows_sql / time_taken_sql   ) ## Warning in read.table(file = file, header = header, sep = sep, quote = quote, : ## incomplete final line found by readTableHeader on ## '/home/runner/work/_temp/Library/sndsTools/extdata/benchmark_rsql_dplyr.csv' timing_results ##   start_date   end_date time_taken_dplyr time_taken_sql n_rows_dplyr n_rows_sql ## 1 2020-01-01 2020-02-01         235.2178       226.4485      4344991    4344991 ## 2 2020-01-01 2021-01-01         763.0326       794.2415     48131314   48131314 ## 3 2020-01-01 2022-01-01        1613.4070      1613.7409    108979756  108979756 ## 4 2020-01-01 2023-01-01        2558.6327      2260.9095    171408536  171408536 ##   time_taken_dplyr_minutes time_taken_sql_minutes query_period_days ## 1                 3.920297               3.774142                31 ## 2                12.717210              13.237359               366 ## 3                26.890116              26.895682               731 ## 4                42.643879              37.681825              1096 ##   query_period_months speed_dplyr_nrows_sec speed_sql_nrows_sec ## 1                   1              18472.20            19187.54 ## 2                  12              63078.97            60600.35 ## 3                  24              67546.35            67532.37 ## 4                  36              66992.24            75813.98"},{"path":"/articles/benchmark_dplyr_vs_rsql.html","id":"durée-des-extractions","dir":"Articles","previous_headings":"Résultats > benchmark dplyr/RSQL","what":"Durée des extractions","title":"Benchmarking dplyr vs RSQL","text":"","code":"# plot time results library(ggplot2)  label_size <- 20  x_breaks <- unique(timing_results$query_period_months) timing_results |>   dplyr::rename(     dplyr = time_taken_dplyr_minutes, rsql = time_taken_sql_minutes   ) |>   tidyr::pivot_longer(     cols = c(dplyr, rsql),     names_to = \"Méthode\",     values_to = \"duration\"   ) |>   ggplot(aes(x = query_period_months, y = duration, fill = Méthode)) +   geom_col(position = \"dodge\") +   scale_x_continuous(breaks = x_breaks) +   labs(     x = \"Période sur laquelle\\n porte l'extraction (mois)\",     y = \"Temps pris par l'extraction\\n sur le portail (minutes)\",     fill = \"Méthode\"   ) +   theme_minimal() +   theme(     text = element_text(size = label_size),     axis.title = element_text(size = label_size),     legend.title = element_text(size = label_size),     legend.text = element_text(size = label_size)   )"},{"path":"/articles/benchmark_dplyr_vs_rsql.html","id":"contenu-des-extractions-nombre-de-lignes","dir":"Articles","previous_headings":"Résultats > benchmark dplyr/RSQL","what":"Contenu des extractions (nombre de lignes)","title":"Benchmarking dplyr vs RSQL","text":"","code":"# plot time results library(ggplot2)  label_size <- 20 timing_results |>   dplyr::rename(dplyr = n_rows_dplyr, rsql = n_rows_sql) |>   tidyr::pivot_longer(     cols = c(dplyr, rsql),     names_to = \"Méthode\",     values_to = \"n_rows\"   ) |>   ggplot(aes(x = query_period_months, y = n_rows / 1e6, fill = Méthode)) +   geom_col(position = \"dodge\") +   scale_x_continuous(breaks = x_breaks) +   labs(     x = \"Période sur laquelle\\n porte l'extraction (mois)\",     y = \"Nombres de lignes \\ndans l'extraction (millions)\",     fill = \"Méthode\"   ) +   theme_minimal() +   theme(     text = element_text(size = label_size),     axis.title = element_text(size = label_size),     legend.title = element_text(size = label_size),     legend.text = element_text(size = label_size)   )"},{"path":"/articles/benchmark_dplyr_vs_rsql.html","id":"vitesse-dextraction-en-nombre-de-lignes-extraites-par-minute","dir":"Articles","previous_headings":"Résultats > benchmark dplyr/RSQL","what":"Vitesse d’extraction (en nombre de lignes extraites par minute)","title":"Benchmarking dplyr vs RSQL","text":"","code":"# plot time results library(ggplot2)  label_size <- 20 timing_results |>   dplyr::rename(dplyr = speed_dplyr_nrows_sec, rsql = speed_sql_nrows_sec) |>   tidyr::pivot_longer(     cols = c(dplyr, rsql),     names_to = \"Méthode\",     values_to = \"speed_nrows_sec\"   ) |>   ggplot(aes(x = query_period_months, y = speed_nrows_sec / 1000, fill = Méthode)) +   geom_col(position = \"dodge\") +   scale_x_continuous(breaks = x_breaks) +   labs(     x = \"Période sur laquelle\\n porte l'extraction (mois)\",     y = \"Vitesse d'extraction\\n (en milliers de lignes par seconde)\",     fill = \"Méthode\"   ) +   theme_minimal() +   theme(     text = element_text(size = label_size),     axis.title = element_text(size = label_size),     legend.title = element_text(size = label_size),     legend.text = element_text(size = label_size)   )"},{"path":"/articles/benchmark_dplyr_vs_rsql.html","id":"conclusion","dir":"Articles","previous_headings":"Résultats > benchmark dplyr/RSQL","what":"Conclusion","title":"Benchmarking dplyr vs RSQL","text":"Il ne semble pas y avoir de différence significative entre les deux méthodes d’extraction.","code":""},{"path":"/articles/benchmark_dplyr_vs_rsql.html","id":"résultats-du-benchmark-en-nombres-de-lignes-x-colonnes","dir":"Articles","previous_headings":"Résultats","what":"Résultats du benchmark en nombres de lignes x colonnes","title":"Benchmarking dplyr vs RSQL","text":"Ce second benchmark étudie la différence pouvant être observée pour une requête donnée (effectuée en dplyr) en fonction du nombre de colonnes extraites pour la requête étudiée.  Attention: Le temps supplémentaire pris par l’extraction de colonnes supplémentaires peut avoir deux causes : des nombres de lignes plus élevés du fait d’un distinct sur plus de colonnes. des colonnes supplémentaires qui prennent plus de temps à extraire.","code":"path2pkg_data <- system.file(\"extdata\", package = \"sndsTools\") # path2pkg_data <- \"inst/extdata\"  label_fill <- \"Nombres\\nde colonnes\\n extraites\" timing_results_cols <- read.csv(   file.path(     path2pkg_data, \"benchmark_dplyr_speed_per_cols_rows.csv\"   ) ) |>   dplyr::mutate(     time_taken_dplyr_minutes = time_taken_dplyr / 60,     n_rows_cols = n_rows_dplyr * n_cols_dplyr,     period_months = as.numeric(       as.Date(end_date) - as.Date(start_date)     ) %/% 30,     !!sym(label_fill) := as.character(n_cols_dplyr)   ) timing_results_cols ##   start_date   end_date time_taken_dplyr n_rows_dplyr n_cols_dplyr ## 1 2020-01-01 2020-02-01         252.7808      4344565           11 ## 2 2020-01-01 2020-02-01         253.2735      4344990           16 ## 3 2020-01-01 2020-02-01         272.1631      4344991           21 ## 4 2020-01-01 2021-01-01         727.3382     48127239           11 ## 5 2020-01-01 2021-01-01         841.7315     48131304           16 ## 6 2020-01-01 2021-01-01         967.4122     48131314           21 ##   time_taken_dplyr_minutes n_rows_cols period_months ## 1                 4.213014    47790215             1 ## 2                 4.221225    69519840             1 ## 3                 4.536051    91244811             1 ## 4                12.122303   529399629            12 ## 5                14.028858   770100864            12 ## 6                16.123537  1010757594            12 ##   Nombres\\nde colonnes\\n extraites ## 1                               11 ## 2                               16 ## 3                               21 ## 4                               11 ## 5                               16 ## 6                               21 # plot time results library(ggplot2)  label_size <- 20 ggplot(timing_results_cols,   aes(x = as.character(period_months), y = time_taken_dplyr_minutes, fill = !!sym(label_fill)),   color = !!sym(label_fill) ) +   geom_col(position = \"dodge\") +   labs(     x = \"Période d'extraction (mois)\",     y = \"Temps d'extraction\\n (minutes)\",     fill = label_fill   ) +   theme(     text = element_text(size = label_size),     axis.title = element_text(size = label_size),     legend.title = element_text(size = label_size),     legend.text = element_text(size = label_size)   )"},{"path":[]},{"path":"/articles/contribuer.html","id":"répondre-à-une-question-sur-une-issue","dir":"Articles","previous_headings":"Différente manière de contribuer","what":"Répondre à une question sur une issue","title":"Contribuer","text":"De nombreuses questions sont posées sur les issues. Vous pouvez y répondre en donnant des conseils, ou en proposant une solution.","code":""},{"path":"/articles/contribuer.html","id":"créer-une-nouvelle-issue","dir":"Articles","previous_headings":"Différente manière de contribuer","what":"Créer une nouvelle issue","title":"Contribuer","text":"Si vous avez trouvé un bug, ou si vous avez une question sur une fonctionnalité, vous pouvez créer une nouvelle issue. En cas de bug, il est important de donner un exemple reproductible reprex. Celui-ci contient le code nécessaire pour reproduire le bug, et le message d’erreur complet. Il est très important pour qu’un développeur plus expérimenté puisse comprendre le problème et vous aider.","code":""},{"path":"/articles/contribuer.html","id":"contribuer-à-la-documentation","dir":"Articles","previous_headings":"Différente manière de contribuer","what":"Contribuer à la documentation","title":"Contribuer","text":"Contribuer à la documentation est aussi important que de contribuer au code. Vous pouvez proposer des modifications à la documentation en créant une pull request. Les petites erreurs et modifications peuvent être corrigée directment dans l’interface web GitHub. NB: La documentation est principalement dans le code R, et est générée avec le paquet roxygen2. Pour la modifier il faut donc modifier les fichiers .R dans le dossier R/ du projet.","code":""},{"path":"/articles/contribuer.html","id":"contribuer-au-code","dir":"Articles","previous_headings":"Différente manière de contribuer","what":"Contribuer au code","title":"Contribuer","text":"Afin de résoudre un bug, ou d’ajouter une nouvelle fonctionnalité, vous pouvez créer une pull request.","code":""},{"path":"/articles/contribuer.html","id":"principes-généraux-de-contribution","dir":"Articles","previous_headings":"","what":"Principes généraux de contribution","title":"Contribuer","text":"Eviter la duplication : Avant de soumettre une nouvelle issue, ou une nouvelle pull request, il est important de s’assurer qu’aucun autre contributeur n’déjà posé la même question ou contribuer sur le même thème. Etre patient : Les contributeurs sont bénévoles, effectuent la plupart du travail sur leur temps libre et peuvent ne pas répondre immédiatement à vos questions. Etre respectueux : Les contributeurs viennent de différents horizons, et ont des niveaux de compétences différents. Il est important de respecter les opinions des autres, et de rester bienveillant.","code":""},{"path":"/articles/contribuer.html","id":"processus-dacceptation-des-pull-requests","dir":"Articles","previous_headings":"","what":"Processus d’acceptation des pull requests","title":"Contribuer","text":"Il est recommandé de créer une nouvelle branche git pour chaque nouvelle pull request (PR). Un code nouveau proposant une nouvelle fonctionnalité doit respecter les conventions de style R. Vous pouvez utiliser le paquet styler pour appliquer ces styles, mais s’il vous plait ne restyler pas du code qui n’rien à faire avec votre PR. Nous utilisons roxygen2, avec la syntaxe Markdown pour la documentation. Nous suivons le guide de style de code R du tidyverse. La seule différence avec le guide actuel est que nous utilisons le pipe natif |> au lieu de %>%. Pour SQL, nous suivons le guide de style SQL de Mozilla. Nous utilisons testthat pour les tests. Les contributions avec des tests inclus sont acceptés plus facilement. Une nouvelle PR doit être revue par au moins un core contributeur avant d’être intégrée.","code":""},{"path":"/articles/contribuer.html","id":"comment-contribuer-concrètement","dir":"Articles","previous_headings":"","what":"Comment contribuer concrètement ?","title":"Contribuer","text":"Afin de modifier le code, il est au préalable nécessaire de forker le dépôt principal sur GitHub, puis de soumettre une “pull request” (PR). Dans les premières étapes, nous expliquons comment installer localement {sndsTools} et comment configurer votre dépôt git : Créez un compte sur GitHub si vous n’en avez pas déjà un. Forkez le dépôt du projet : cliquez sur le bouton “Fork” en haut de la page. Cela crée une copie du code sur votre compte GitHub. Pour plus de détails sur la manière de forker un dépôt, consultez ce guide. Clonez votre fork du dépôt {sndsTools} depuis votre compte GitHub sur votre disque local : Ouvrez le projet dans Rstudio et installez localement le paquet avec les dépendances de développement. Dans la console R, lancez : Ajoutez le dépôt upstream remote. Cela sauvegarde la référence du dépôt {sndsTools}, que vous pouvez utiliser pour garder votre version synchronisée avec les derniers changements. Vous devriez désormais avoir une installation fonctionnelle de {sndsTools}, et votre dépôt git correctement configuré. Vous pouvez maintenant commencer à contribuer en modifiant le code et en soumettant une PR. Synchronisez votre branche main avec la branche upstream/main, plus de détail sur la documentation GitHub: Créez une nouvelle branche pour votre contribution : Et commencez à faire vos changements. Utilisez toujours une branche différente pour chaque nouvelle fonctionnalité ou bug fix. C’est une bonne pratique de ne jamais coder sur la branche main. Une fois que vous avez terminé vos modifications, vous pouvez les commiter : puis les pousser sur votre fork : Suivez ces instructions pour créer une pull request de votre travail. Cela enverra un mail aux mainteneurs du projet pour qu’ils puissent examiner votre code. Il est possible qu’à un moment, vous ayez besoin de résoudre des conflits, si d’autres contributeurs ont modifié le code pendant que vous travailliez sur votre branche. Vous pouvez vous référer à cette documentation pour résoudre les conflits. Avant de demander une revue pour votre pull request, vérifier avec les commandes suivantes dans le terminal que le code passent certains test de qualité : que votre code ne casse pas de tests : make test que votre code respecte les conventions de style : make style-pkg que votre code respecte les conventions de lint : make lint-pkg que la documentation se génère correctement : make doc-html","code":"git clone git@github.com:YourLogin/sndsTools.git cd sndsTools devtools::install(dependencies = TRUE) git remote add upstream git@github.com:SNDStoolers/sndsTools.git git checkout main git fetch upstream git merge upstream/main git checkout -b my-new-feature git add modified_files git commit -m 'Add some feature' git push origin my-new-feature"},{"path":"/articles/contribuer.html","id":"références-pour-contribuer","dir":"Articles","previous_headings":"","what":"Références pour contribuer","title":"Contribuer","text":"La meilleur manière d’apprendre comment contribuer est de se lancer ! Néamoins, la lecture de certaines ressources peut être utile : Guide de contribution de tidyverse Apprendre git","code":""},{"path":"/articles/donnees_fictives.html","id":"exemple-de-requêtes-simples","dir":"Articles","previous_headings":"","what":"Exemple de requêtes simples","title":"Exemple de requêtes simples","text":"Ce document présente quelques exemples de requêtes simples sur la base de données SNDS. Ces exemples sont effectuées à partir d’une base de données fictive fournie par le package sndsTools. Le fonctionnement sur le portail est identique sauf pour la connexion à la base de données. Il faut remplacer connect_duckdb() par connect_oracle().","code":""},{"path":"/articles/donnees_fictives.html","id":"connexion-à-la-base-de-données","dir":"Articles","previous_headings":"Exemple de requêtes simples","what":"Connexion à la base de données","title":"Exemple de requêtes simples","text":"","code":"# Instancier une connexion duckdb conn <- connect_duckdb() # Remplacer par connect_oracle() sur le portail ## [1] \"Le code ne s'exécute pas sur le portail CNAM.\\n    Initialisation d'une connexion duckdb en mémoire.\" # Charger une base de données fictive SNDS insert_synthetic_snds(conn) # Ne pas lancer sur le portail # Afficher les tables disponibles tables <- DBI::dbListTables(conn) # Affiche les 10 premières tables print(tables[1:10]) ##  [1] \"CT_DEP_AAAA_GN\" \"CT_IDE_AAAA_GN\" \"CT_IND_AAAA_GN\" \"ER_ANO_F\"       ##  [5] \"ER_ARO_F\"       \"ER_BIO_F\"       \"ER_CAM_F\"       \"ER_CPT_F\"       ##  [9] \"ER_DCT_F\"       \"ER_DTR_F\" # Affiche le début de la table principale du DCIR er_prs_f <- DBI::dbReadTable(conn, \"ER_PRS_F\") head(er_prs_f) ##         BEN_NIR_PSA BEN_RNG_GEM FLX_EMT_TYP FLX_EMT_NUM REM_TYP_AFF FLX_EMT_ORD ## 1 WzaLKmWVyVPvZUkvM           6           3          15    30987529         611 ## 2 WzaLKmWVyVPvZUkvM           6           4           5    29286506        7330 ## 3 WzaLKmWVyVPvZUkvM           6           2           1    19536389         907 ## 4 sBbKuDRTDsvFYNXtL           1          17           1    72369523        1976 ## 5 koyuzoOtYoyAAZVik           8          21           1    66315128        5621 ## 6 koyuzoOtYoyAAZVik           8          10           1    69447823        4326 ##   PFS_EXE_NUM ETB_PRE_FIN FLX_TRT_DTD DCT_ORD_NUM PRS_ORD_NUM FLX_DIS_DTD ## 1   ZqvUqFNsC    75003128  24/11/1991   327092725       72291  1984-08-21 ## 2   NVGKdCFit    45000999  11/12/2016   200531402       15086  1997-09-02 ## 3   lhPxFnfSy    28000422  19/09/2023   913861758       30396  1980-01-30 ## 4   hmfVFrBmO    10000066  18/06/2004   428028684       42408  1995-08-02 ## 5   XANENnhsc    68001269  27/02/1990   657778576       84133  1984-04-19 ## 6   mvEuiHpXz    14001053  23/11/1984   650221758        5967  2015-03-30 ##   PFS_PRE_NUM ORG_CLE_NUM PRS_MTT_NUM BEN_AMA_COD BEN_CDI_NIR BEN_CMU_CAT ## 1   YrRWGgyIS   01C594807   fOGvUqreY        1020          11           2 ## 2   HJsjfUzVi   99C999226   bVOFESSBi          53          11           1 ## 3   ogXVOcQnu   92C801921   VIMczxQrH          28          NN           2 ## 4   apTimKcKR   01C623011   vgiPaqtrL         105          06           1 ## 5   TbIwZUYRV   01C051407   MSwBvuYBo        1022          03           7 ## 6   UXXVgRrWv   03A011011   mDdjwMASO           9          04           7 ##   BEN_CMU_ORG BEN_CMU_TOP BEN_DCD_AME        BEN_DCD_DTE BEN_EHP_TOP ## 1   01C461056           1      201204 20Nov1985:13:13:57           0 ## 2   01C542330           1      201108 17Jan1992:01:52:04           0 ## 3   01C342343           0      198802 12Jun2020:00:56:53           0 ## 4   01C781935           0      199704 19Feb2007:16:54:25           0 ## 5   01C599242           1      198811 28May1997:20:39:20           0 ## 6   01C971175           0      198812 19Sep2011:15:55:35           0 ##   BEN_IAT_CAT BEN_NAI_ANN BEN_PAI_CMU BEN_QAF_COD BEN_RES_COM BEN_RES_DPT ## 1           3        1985           1          28         645         002 ## 2          66        1989           0          22         100         079 ## 3          33        2011           9          26         648         027 ## 4          34        1990           1          40         122         022 ## 5          64        2015           1          25         208         051 ## 6          23        1969           9          61           9         078 ##   BEN_SEX_COD ORG_AFF_BEN PRS_REJ_TOP EXE_SOI_AMD EXE_SOI_AMF EXE_SOI_DTD ## 1           2   94C841045           1      197205      197205  1991-09-28 ## 2           9   01C241231           0      198301      198301  2016-11-18 ## 3           0   91C141061           0      200211      200211  2023-07-30 ## 4           1   94C531039           0      197905      197905  2004-05-10 ## 5           1   01C521629           0      199709      199710  1990-01-31 ## 6           9   01C291703           0      201810      201810  1984-10-10 ##   EXE_SOI_DTF PRE_PRE_AMD PRE_PRE_DTD PRS_GRS_DTD PRS_HOS_AMD PRS_HOS_DTD ## 1  1991-11-16      202110  15/12/1997  27/02/2008      198204  17/11/1984 ## 2  2016-11-21      199708  10/07/2010  10/11/1988      197612  11/05/2007 ## 3  2023-09-02      200611  09/07/2004  25/02/1972      197311  12/03/2010 ## 4  2004-06-11      201806  30/04/2001  31/05/2005      200601  18/10/2022 ## 5  1990-02-20      202007  13/10/2023  22/09/1990      199503  21/12/1992 ## 6  1984-11-19      201410  01/02/2008  20/11/1983      200910  03/11/2005 ##   BSE_REM_BSE BSE_REM_MNT BSE_REM_PRU BSE_REM_SGN CPL_REM_BSE CPL_REM_MNT ## 1        7983        3729        5859           2        2992        3761 ## 2        7516        7648        4734           2        4806         455 ## 3        3051        5469        9980           1         511        2317 ## 4        6261        3326        1644           0        8174        4586 ## 5        6138        7150        5496           9        1761        7128 ## 6        5871        3889        9138           0         703        7782 ##   CPL_REM_PRU CPL_REM_SGN PRS_ACT_CFT PRS_ACT_COG PRS_ACT_NBR PRS_ACT_QTE ## 1        5080           1         145         945         632         528 ## 2        7584           2         909         705          60         114 ## 3        2637           0          81         483         230         570 ## 4        6889           0         563         571         205         181 ## 5        7621           1         141         878         937         793 ## 6        5464           2         428         479         528         716 ##   PRS_DEP_MNT PRS_ETA_RAC PRS_PAI_MNT RGO_MOD_MNT ORB_BSE_NUM ORL_BSE_NUM ## 1        4708        5443        7399        1468      95C692      06A209 ## 2        9471        7097        3086        9779      03C084      90C761 ## 3        8066        9483        7637        9727      99C591      99C068 ## 4         209        8589        5856        8131      99C231      06A501 ## 5        2542          14        5112        2667      92C131      92C101 ## 6         490        2336         555        8387      01C972      01C771 ##   RGM_COD RGM_GRG_COD ACC_TIE_IND BSE_FJH_TYP BSE_PRS_NAT CPL_AFF_COD ## 1       7           6           2           3        2202           1 ## 2       4           4           0           8        2213           3 ## 3       4           6           0           1        1997           4 ## 4       4           4           1           2        1215           2 ## 5       8           6           0           2        9832           2 ## 6       4           1           0           1        2167          99 ##   CPL_ANO_COD CPL_FJH_TYP CPL_MAJ_TOP CPL_PRS_NAT DPN_QLF DRG_MOD DRG_NAT ## 1           6           1           0        9828      72       1      99 ## 2           9           1           0        9803      61      23       0 ## 3           0           8           0        6118      72       1      34 ## 4           5           0           1        6123      66      12      33 ## 5           5           0           1        3412       0       3       0 ## 6           4           8           0        1143      20      21       0 ##   EXE_LIE_COD EXO_MTF  IJR_EMP_NUM IJR_RVL_NAT MTM_NAT ORG_CLE_NEW PRE_REN_COD ## 1           2      30 4.189870e+15          RC       4   01C673207           1 ## 2           8      57 4.796601e+15          RC       4   99C951093           8 ## 3           1      57 8.069220e+15          SM       3   01C431044           9 ## 4           0      30 4.766968e+15          RC       1   94C271001           3 ## 5           0      91 4.895657e+15          CC       9   01C111552           0 ## 6           0       0 9.298714e+15          AM       5   01C751189           2 ##   PRS_CRD_OPT PRS_DPN_QLP PRS_NAT_REF PRS_OPS_TRF PRS_PDS_QCP PRS_PDS_QTP ## 1           3          99        9206           2           8           4 ## 2           1          71        7112           2          11           7 ## 3           3          14        1914           0          24           6 ## 4           0          14        9766           2          23          99 ## 5           2          71        2237           9          99          10 ## 6           4          61        9168           1           8           2 ##   PRS_PPF_COD PRS_PRE_MTT PRS_REF_KIN PRS_TOP_ENP PRS_TYP_KIN RGO_ASU_NAT ## 1           E           2          HH           2           K          80 ## 2           N           4          II           2           K          40 ## 3           I           0          II           1           B          80 ## 4           N           3          II           0           I          22 ## 5           A           9          ZZ           9           U          12 ## 6           D           3          II           1           Z          22 ##   RGO_ENV_TYP RGO_FTA_COD RGO_MIN_TAU RGO_REM_TAU RGO_THE_TAU PSE_ACT_NAT ## 1           2           1          60          49        85.0          24 ## 2          98           1          86          35        65.0          21 ## 3           5           3          34          75        75.0          51 ## 4           9           1          10          29        55.0          62 ## 5           2           6          43          66        62.5          57 ## 6           3           9           4          34        62.5          40 ##   PSE_CNV_COD PSE_REF_ADH PSE_SPE_COD PSE_STJ_COD PSP_ACT_NAT PSP_CNV_COD ## 1           0           v          77          51          63           9 ## 2           3           y          17          90          29           0 ## 3           8           Y          47          64          19           1 ## 4           1           G          76          55          28           1 ## 5           2           x          49          99          63           2 ## 6           1           s          72          98          40           8 ##   PSP_PPS_NUM PSP_REF_ADH PSP_SPE_COD PSP_STJ_COD PSP_SVI_PPS BEN_DRT_SPF ## 1   KPOhHMsrm           U          14          98          14         ZZZ ## 2   tXkNjHApQ           l          38          69           0         ACS ## 3   wjAlhdfVX           V           7          69           0         ZZZ ## 4   vmZzFqDVg           F          35          63          99         ZZZ ## 5   HQXhmgsyt           f          44          98          22         ZZZ ## 6   zyiIlFxEG           m          47          61          13         III ##   BEN_ACS_TOP EXE_CTX_PFS PRS_TYP_MAJ EXE_CTX_BEN CPL_FTA_COD PRS_PPU_SEC ## 1           0        MKjC          ZZ        cLhH          67           2 ## 2           0        MPdo          II        eOOL          15           9 ## 3           0        qjxR           T        VNhg          94           2 ## 4           1        saxq          II        urKV          86           9 ## 5           1        qFfv          II        HsaZ          54           1 ## 6           0        fMUL          ZZ        WcRX          52           2 ##   BEN_CTA_TYP PRS_DRA_AME DRG_AFF_NAT PRS_MNT_MAJ PRE_IND_PEL PRS_DIS_PRE ## 1          73      197408          72     5286019          iu          ql ## 2          56      202312          89     6845177          hH          hQ ## 3          84      197806          93     9277373          jM          wU ## 4          70      201412          38     2669391          OM          FZ ## 5          33      201802          80     3371303          TP          iD ## 6          42      198210          73      580267          Xz          Qw ##   CPL_REM_TAU PRS_QTT_MAJ ## 1          54           3 ## 2          30           3 ## 3          28           7 ## 4           9           9 ## 5          30           6 ## 6          49           7 er_prs_f |> dplyr::select(c(\"FLX_DIS_DTD\", \"EXE_SOI_DTD\")) ##     FLX_DIS_DTD EXE_SOI_DTD ## 1    1984-08-21  1991-09-28 ## 2    1997-09-02  2016-11-18 ## 3    1980-01-30  2023-07-30 ## 4    1995-08-02  2004-05-10 ## 5    1984-04-19  1990-01-31 ## 6    2015-03-30  1984-10-10 ## 7    2001-01-28  2007-11-12 ## 8    2013-08-31  1988-05-17 ## 9    1997-07-09  2018-05-18 ## 10   1996-12-07  1996-03-28 ## 11   2023-03-29  1993-11-23 ## 12   1974-08-30  1992-01-02 ## 13   2022-09-02  1971-10-16 ## 14   2019-07-19  1984-09-03 ## 15   1989-12-11  1994-01-08 ## 16   1970-06-25  1998-10-17 ## 17   2015-06-01  2017-04-11 ## 18   1975-01-28  1991-02-05 ## 19   2000-04-05  1994-08-16 ## 20   2012-06-24  1993-11-22 ## 21   2007-05-18  2001-11-05 ## 22   2018-09-01  1973-11-18 ## 23   2018-10-18  2014-05-20 ## 24   1980-08-06  1988-12-25 ## 25   2004-11-29  2014-03-09 ## 26   1982-05-25  2013-05-14 ## 27   2009-01-12  1976-05-23 ## 28   2009-06-06  2009-10-08 ## 29   2000-04-06  1994-06-15 ## 30   2017-06-18  1997-10-27 ## 31   1994-01-01  2021-10-18 ## 32   1994-06-26  1987-05-27 ## 33   1994-10-22  1996-04-10 ## 34   2016-12-16  1993-10-27 ## 35   1977-06-08  1992-04-19 ## 36   1972-09-07  1993-12-24 ## 37   1993-11-23  2008-09-10 ## 38   2018-05-19  2019-12-23 ## 39   1980-05-19  2011-09-11 ## 40   1971-01-11  1995-04-19 ## 41   1991-11-29  2014-06-06 ## 42   1990-06-18  2019-08-17 ## 43   2023-05-31  1996-06-14 ## 44   1974-05-17  2016-11-03 ## 45   1976-08-27  2004-04-01 ## 46   2004-04-30  1981-05-07 ## 47   1972-04-04  1984-09-03 ## 48   2021-11-03  1990-05-20 ## 49   2021-04-12  1971-07-15 ## 50   2008-03-09  1990-04-13 ## 51   1978-06-09  2018-04-02 ## 52   2001-04-30  1971-04-24 ## 53   1976-12-11  1971-06-20 ## 54   1970-08-17  2003-09-02 ## 55   1977-09-25  2001-07-31 ## 56   1999-03-16  1974-11-24 ## 57   2001-08-24  1998-12-21 ## 58   1996-03-22  2007-01-13 ## 59   1987-02-06  1970-11-18 ## 60   2021-01-07  2013-08-22 ## 61   2006-06-01  2000-05-19 ## 62   1980-07-13  1997-03-21 ## 63   1976-01-18  1987-06-13 ## 64   1983-05-21  1990-04-19 ## 65   2018-12-13  1988-04-14 ## 66   2003-09-11  1975-03-17 ## 67   1982-02-13  2013-11-22 ## 68   2003-01-10  1972-07-24 ## 69   1983-06-17  1997-06-17 ## 70   2019-07-13  1998-01-21 ## 71   1998-08-23  2002-04-30 ## 72   2018-07-30  2000-06-21 ## 73   2015-10-02  1983-09-28 ## 74   1976-05-31  2010-03-22 ## 75   1974-03-11  2014-10-24 ## 76   1993-10-20  1977-06-18 ## 77   1975-02-27  1980-04-02 ## 78   1977-05-11  1978-12-15 ## 79   2016-05-09  2006-07-12 ## 80   1981-03-02  2007-02-13 ## 81   1982-11-24  2018-05-19 ## 82   2019-11-07  1997-06-23 ## 83   2010-05-16  2005-10-08 ## 84   1996-06-21  2022-04-28 ## 85   1985-07-02  2010-06-11 ## 86   2009-05-16  1992-08-05 ## 87   1986-02-25  1995-02-21 ## 88   1984-10-11  1973-10-31 ## 89   1996-12-27  1999-01-30 ## 90   1975-01-30  1980-05-29 ## 91   1990-07-27  2002-06-17 ## 92   1989-08-31  1986-05-02 ## 93   2023-10-20  2012-08-11 ## 94   2015-07-02  1994-09-23 ## 95   1970-03-19  1980-12-01 ## 96   2008-11-15  2001-09-28 ## 97   1996-07-03  2013-05-18 ## 98   2003-07-18  1984-01-02 ## 99   2006-12-03  2011-05-11 ## 100  2017-07-06  1976-05-28 ## 101  1984-05-27  1977-12-19 ## 102  2011-10-24  1989-10-09 ## 103  2016-10-30  1988-03-02 ## 104  1998-08-28  1987-07-26 ## 105  1976-10-18  1980-02-28 ## 106  1991-03-08  1999-05-14 ## 107  2008-03-11  1989-05-03 ## 108  2001-07-29  2010-06-28 ## 109  2001-02-01  1993-09-18 ## 110  1998-12-09  1985-03-17 ## 111  1972-10-17  1992-03-13 ## 112  2019-09-30  2008-03-21 ## 113  1978-01-13  1980-11-19 ## 114  1974-12-21  1996-11-22 ## 115  1975-01-26  2010-09-05 ## 116  1980-03-24  1982-10-23 ## 117  1991-09-11  1981-03-16 ## 118  1970-10-31  1995-02-05 ## 119  2014-07-09  1975-02-06 ## 120  2007-12-24  2004-10-05 ## 121  1982-08-31  2007-12-03 ## 122  1978-12-14  1986-11-24 ## 123  2002-07-03  2010-06-06 ## 124  2019-02-14  2000-01-29 ## 125  1984-12-20  1997-11-14 ## 126  2017-08-16  2007-11-23 ## 127  2007-03-14  2014-09-25 ## 128  2010-08-24  1998-03-04 ## 129  1981-06-28  2002-08-11 ## 130  1978-03-13  2022-10-21 ## 131  1974-04-05  2004-09-28 ## 132  2023-11-10  2018-04-29 ## 133  1999-10-25  1976-02-07 ## 134  1970-01-30  1996-02-15 ## 135  1988-10-02  2001-08-20 ## 136  2006-06-29  1996-02-04 ## 137  1985-07-15  2012-01-25 ## 138  1999-01-11  2014-01-26 ## 139  2021-09-08  2021-11-14 ## 140  2005-04-13  2011-07-22 ## 141  1970-07-13  2008-10-16 ## 142  2023-10-27  1980-05-30 ## 143  1994-08-09  2002-12-09 ## 144  1975-01-12  1992-09-11 ## 145  1996-12-24  1972-10-28 ## 146  1983-05-10  1988-04-24 ## 147  1985-02-02  1986-03-02 ## 148  1983-03-08  1987-02-01 ## 149  2021-09-04  1996-04-28 ## 150  2022-01-01  1976-03-07 ## 151  2015-04-03  1987-02-05 ## 152  2020-07-14  1990-01-08 ## 153  1978-05-17  1976-10-12 ## 154  2018-11-02  2003-10-29 ## 155  2012-01-17  1978-03-27 ## 156  2013-05-12  1984-12-19 ## 157  2014-09-17  1977-08-25 ## 158  1998-12-13  1995-12-19 ## 159  1970-07-27  1984-12-31 ## 160  2004-03-18  1974-05-05 ## 161  1973-09-12  1978-06-29 ## 162  2011-07-05  1985-06-21 ## 163  2018-08-22  2020-01-15 ## 164  2013-08-18  1983-12-21 ## 165  1996-10-05  1973-04-07 ## 166  2007-02-02  1970-09-07 ## 167  1975-11-20  2023-10-20 ## 168  2017-03-09  2020-02-17 ## 169  2003-12-26  1977-08-01 ## 170  1988-11-21  2023-03-01 ## 171  1983-11-24  1979-01-12 ## 172  1972-11-18  2003-07-25 ## 173  1971-01-20  2017-07-31 ## 174  2016-08-26  2013-07-13 ## 175  1982-01-28  1990-09-01 ## 176  1979-05-25  2012-08-27 ## 177  2022-08-02  2021-08-04 ## 178  1976-04-25  2022-09-21 ## 179  2012-06-26  2022-09-23 ## 180  1994-07-01  2018-12-07 ## 181  1999-02-18  2001-05-08 ## 182  2012-10-06  1992-09-10 ## 183  2021-09-24  2005-04-13 ## 184  1973-07-09  1998-11-11 ## 185  2006-07-12  1990-07-03 ## 186  2016-09-05  1996-12-28 ## 187  1971-05-23  1987-05-17 ## 188  2017-06-07  2003-02-12 ## 189  1977-06-16  1997-07-26 ## 190  2020-07-22  1980-08-12 ## 191  1993-03-19  1978-07-13 ## 192  2021-06-22  1971-09-26 ## 193  1979-01-24  1979-11-01 ## 194  1991-08-17  2004-07-15 ## 195  1970-03-28  1990-03-09 ## 196  2001-10-03  1998-02-26 ## 197  1971-06-10  2020-12-28 ## 198  1973-07-31  1989-01-18 ## 199  2006-05-05  1988-01-09 ## 200  2011-11-27  1971-06-30 ## 201  2003-12-06  1987-10-03 ## 202  1995-08-03  1997-11-28 ## 203  1994-06-04  1983-06-10 ## 204  1978-02-14  1984-04-06 ## 205  1973-05-24  2015-11-26 ## 206  1974-11-17  2006-11-02 ## 207  2001-10-02  2002-05-31 ## 208  1970-08-10  2024-01-25 ## 209  2018-04-28  2000-04-06 ## 210  1999-03-04  1975-02-27 ## 211  1977-05-06  2020-02-17 ## 212  1979-02-08  1980-11-17 ## 213  2006-02-18  1989-12-23 ## 214  2003-07-01  1970-01-27 ## 215  2016-03-03  2020-02-10 ## 216  1970-10-31  1998-08-19 ## 217  2014-12-15  2004-11-10 ## 218  1994-07-05  1983-08-30 ## 219  1988-04-20  2004-06-22 ## 220  1985-07-16  1975-06-04 ## 221  2012-10-27  2015-03-20 ## 222  2019-10-16  2022-10-29 ## 223  1994-12-14  1970-10-10 ## 224  1981-04-03  2008-07-28 ## 225  1975-08-14  2018-08-09 ## 226  1981-06-30  2023-03-02 ## 227  1984-07-21  2012-05-26 ## 228  2004-03-09  1999-10-06 ## 229  2004-10-22  1988-11-19 ## 230  2012-03-06  2014-03-18 ## 231  1977-06-03  2016-02-18 ## 232  2004-09-03  2024-02-25 ## 233  2013-05-17  1990-02-08 ## 234  2020-06-28  1986-08-07 ## 235  1974-11-26  1982-02-26 ## 236  1993-12-24  1971-09-03 ## 237  1995-12-31  1970-01-21 ## 238  1988-11-05  1994-11-11 # Extraction des consultations (sans filtre sur les codes prestations ou les spécialités exécutantes) extracted_consultations <- extract_consultations_erprsf(start_date = as.Date(\"2020-01-01\"), end_date = as.Date(\"2021-12-31\"), dis_dtd_lag_months = 36, conn = conn) ## Extracting consultations from all specialties codes... # Ne pas oublier de déconnecter la base de données DBI::dbDisconnect(conn)"},{"path":"/articles/gouvernance.html","id":"gouvernance","dir":"Articles","previous_headings":"","what":"Gouvernance","title":"Gouvernance","text":"Cet effort de développement d’un paquet R pour les données du SNDS est un projet communautaire basé sur le consensus et l’investissement personnel de ses membres. Tout utilisateur ayant un intérêt dans le projet peut rejoindre la communauté, contribuer au projet et à ses orientations futures. Ce document précise comment la participation lieu, comment trouver / gagner sa place dans le projet, et quels sont les différents rôles et responsabilités. Actuellement, le paquet essaye de fonctionner avec deux types de contributeurs :","code":""},{"path":"/articles/gouvernance.html","id":"les-contributeurs","dir":"Articles","previous_headings":"Gouvernance","what":"Les contributeurs","title":"Gouvernance","text":"Les contributeurs classiques faisant des issues, des reviews et des propositions de nouvelles fonctionnalités (pull requests). Chaque nouvelle fonctionnalité avant d’être intégré doit être revue par un core contributeur","code":""},{"path":"/articles/gouvernance.html","id":"les-core-contributeurs","dir":"Articles","previous_headings":"Gouvernance","what":"Les core contributeurs","title":"Gouvernance","text":"Les core contributors sont particulièrement investis dans le projet. Ils ont des accès larges sur le dépôt. Ce sont eux seulement qui valident l’intégration de nouvelles fonctionnalités (pull requests) et peuvent fermer les issues.","code":""},{"path":"/articles/gouvernance.html","id":"devenir-un-contributeur","dir":"Articles","previous_headings":"Gouvernance","what":"Devenir un contributeur","title":"Gouvernance","text":"Tout utilisateur peut être contributeur en faisant une nouvelle issue, une pull request, ou en effectuant une revue sur une pull request existante. Le guide de contribution détaille les différentes manières de contribuer.","code":""},{"path":"/articles/gouvernance.html","id":"devenir-un-core-contributeur","dir":"Articles","previous_headings":"Gouvernance","what":"Devenir un core contributeur","title":"Gouvernance","text":"Après une ou deux pull requests ou reviews de la part d’un nouveau contributeur, sur demande de ce dernier, les core contributeurs décident collégialement de l’intégrer au projet. Le nombre de core contributeur n’est pas limité. Le projet est en phase très précoce, et accueille à bras ouverts de nouveaux core contributeurs 🤗.","code":""},{"path":"/articles/paresnds.html","id":"a-quoi-sert-ce-paquet-r-de-traitement-de-données","dir":"Articles","previous_headings":"","what":"A quoi sert ce paquet R de traitement de données ?","title":"Prise en main","text":"Ce paquet R de traitement de données pour objectif de faciliter l’accès aux données du Système National des Données de Santé (SNDS) pour les utilisateurs de R. Il permet de simplifier les extractions de données et de mettre à disposition des fonctions implémentants les bonnes pratiques pour utiliser ces données.","code":""},{"path":[]},{"path":[]},{"path":"/articles/paresnds.html","id":"sur-le-portail-cnam","dir":"Articles","previous_headings":"Prise en main rapide > Installation","what":"Sur le portail CNAM","title":"Prise en main","text":"Pour une utilisation sur le portail CNAM, il est nécessaire de copier/coller le code source du paquet sur le portail CNAM. Pour cela, il faut suivre les étapes suivantes :","code":"## 1. En local (sur votre ordinateur) : Copier le fichier contenant toutes les fonctions: [sndsTools_all.R](https://github.com/SNDStoolers/sndsTools/sndsTools_all.R) ## 2. Sur le portail CNAM, coller le fichier sndsTools.R sur le portail CNAM ## 3. Sur le portail CNAM, charger toutes les fonctions du paquet: source(\"sndsTools_all.R\")"},{"path":"/articles/paresnds.html","id":"en-local-pour-le-développement-du-paquet","dir":"Articles","previous_headings":"Prise en main rapide > Installation","what":"En local (pour le développement du paquet)","title":"Prise en main","text":"Ouvrir le paquet avec Rstudio, puis lancer : Puis pour charger le paquet :","code":"devtools::install(dependencies = TRUE) library(sndsTools)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Antoine Belloir. Author, maintainer. Matthieu Doutreligne. Author. Thomas Soeiro. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Belloir , Doutreligne M, Soeiro T (2025). sndsTools: Extraction de recours aux soins sur le SNDS en R. R package version 0.0.0.1, https://sndstoolers.github.io/sndsTools/index.html/.","code":"@Manual{,   title = {sndsTools: Extraction de recours aux soins sur le SNDS en R},   author = {Antoine Belloir and Matthieu Doutreligne and Thomas Soeiro},   year = {2025},   note = {R package version 0.0.0.1},   url = {https://sndstoolers.github.io/sndsTools/index.html/}, }"},{"path":[]},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Extraction de recours aux soins sur le SNDS en R","text":"Ce package R permet d’extraire des données de recours aux soins du SNDS (Système National des Données de Santé) pour une population donnée.","code":""},{"path":"/index.html","id":"fonctionnalités","dir":"","previous_headings":"","what":"Fonctionnalités","title":"Extraction de recours aux soins sur le SNDS en R","text":"Ce package R simplifie les étapes d’extraction de données du SNDS sur des données utilisées dans la majorité des études sur le SNDS. Les principales fonctionnalités couvertes sont les suivantes : Effectuer l’extraction des tables individuelles pour les données suivantes : Consultations dans le DCIR, Médicaments dans le DCIR, Affections de longue durée (ALD), Hospitalisations dans le MCO, Consultations dans le MCO. Intègre les requêtes mois par mois sur la date de flux pour les données DCIR conformément aux recommandations de la CNAM. Intègre les filtres qualités usuels pour exclure les lignes indésirables (ex. PRS_DPN_QLP != 71 pour exclure les remontées pour information dans le DCIR).","code":""},{"path":"/index.html","id":"historique","dir":"","previous_headings":"","what":"Historique","title":"Extraction de recours aux soins sur le SNDS en R","text":"Ce projet été initié suite à la rencontre de plusieurs utilisateurs du SNDS lors du congrès Emois en mars 2024. Il est actuellement en phase de développement actif. C’est un projet communautaire, évolutif par nature, qui vise à rassembler les différents utilisateurs du SNDS.","code":""},{"path":[]},{"path":"/index.html","id":"données","dir":"","previous_headings":"Contexte technique","what":"Données","title":"Extraction de recours aux soins sur le SNDS en R","text":"Les données sont issues du SNDS et sont hébergées sur le portail de l’assurance maladie (CNAM). Pour mener utiliser ce package, il est nécessaire d’avoir un accès aux données individuelles bénéficiaires exhaustives de consommation de soins.","code":""},{"path":"/index.html","id":"schéma-de-flux-de-données","dir":"","previous_headings":"Contexte technique","what":"Schéma de flux de données","title":"Extraction de recours aux soins sur le SNDS en R","text":"TODO (figure à mettre dans man/figures)","code":""},{"path":"/index.html","id":"technologies","dir":"","previous_headings":"Contexte technique","what":"Technologies","title":"Extraction de recours aux soins sur le SNDS en R","text":"Langage de programmation : R Packages utilisés : dplyr, dbplyr, DBI, glue, lubridate, progress","code":""},{"path":"/index.html","id":"liens-utiles","dir":"","previous_headings":"","what":"Liens utiles","title":"Extraction de recours aux soins sur le SNDS en R","text":"lien vers cette page de la documentation : https://sndstoolers.github.io/sndsTools/index.html Dépôt du code source : https://github.com/SNDStoolers/sndsTools Description des extractions et des tables de données créées : TODO Flux de données Prise en main rapide : Prise en main Référence des fonctions utilisées Guide de contribution Principes de gouvernance","code":""},{"path":"/reference/connect_duckdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialisation de la connexion à la base de données duckdb. — connect_duckdb","title":"Initialisation de la connexion à la base de données duckdb. — connect_duckdb","text":"Utilisation pour le testing uniquement. Si le code s'exécute en dehors du portail, il faut initier une connexion duckdb pour effectuer les tests.","code":""},{"path":"/reference/connect_duckdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialisation de la connexion à la base de données duckdb. — connect_duckdb","text":"","code":"connect_duckdb()"},{"path":"/reference/connect_duckdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialisation de la connexion à la base de données duckdb. — connect_duckdb","text":"dbConnection Connexion à la base de données duckdb","code":""},{"path":"/reference/connect_oracle.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialisation de la connexion à la base de données. — connect_oracle","title":"Initialisation de la connexion à la base de données. — connect_oracle","text":"Initialisation de la connexion à la base de données.","code":""},{"path":"/reference/connect_oracle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialisation de la connexion à la base de données. — connect_oracle","text":"","code":"connect_oracle()"},{"path":"/reference/connect_oracle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialisation de la connexion à la base de données. — connect_oracle","text":"dbConnection Connexion à la base de données oracle","code":""},{"path":"/reference/create_table_from_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Création d'une table à partir d'une requête SQL. — create_table_from_query","title":"Création d'une table à partir d'une requête SQL. — create_table_from_query","text":"Création d'une table à partir d'une requête SQL.","code":""},{"path":"/reference/create_table_from_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Création d'une table à partir d'une requête SQL. — create_table_from_query","text":"","code":"create_table_from_query(   conn = NULL,   output_table_name = NULL,   query = NULL,   overwrite = FALSE )"},{"path":"/reference/create_table_from_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Création d'une table à partir d'une requête SQL. — create_table_from_query","text":"conn Connexion à la base de données output_table_name Nom de la table de sortie query Requête SQL overwrite Logical. Indique si la table output_table_name doit être écrasée dans le cas où elle existe déjà.","code":""},{"path":"/reference/create_table_from_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Création d'une table à partir d'une requête SQL. — create_table_from_query","text":"La fonction crée une table sous Oracle à partir d'une requête SQL. Si la table output_table_name existe déjà, elle est écrasée si le paramètre overwrite est TRUE.","code":""},{"path":"/reference/download_synthetic_snds.html","id":null,"dir":"Reference","previous_headings":"","what":"Télécharge et zip les données synthétiques du SNDS — download_synthetic_snds","title":"Télécharge et zip les données synthétiques du SNDS — download_synthetic_snds","text":"Télécharge les données fictives du SNDS disponible sur datagouv.fr. Puis, zip dans une seul fichier synthetic_data.zip toutes les tables des données fictives. Sauvegarde ce fichier zip dans le répertoire inst/extdata du package.","code":""},{"path":"/reference/download_synthetic_snds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Télécharge et zip les données synthétiques du SNDS — download_synthetic_snds","text":"","code":"download_synthetic_snds()"},{"path":"/reference/download_synthetic_snds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Télécharge et zip les données synthétiques du SNDS — download_synthetic_snds","text":"Le chemin vers le répertoire contenant le fichier zip contenant les données.","code":""},{"path":"/reference/extract_consultations_erprsf.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction des consultations dans le DCIR. — extract_consultations_erprsf","title":"Extraction des consultations dans le DCIR. — extract_consultations_erprsf","text":"Cette fonction permet d'extraire les consultations dans le DCIR. Les consultations dont les dates EXE_SOI_DTD sont comprises entre start_date et end_date (incluses) sont extraites.","code":""},{"path":"/reference/extract_consultations_erprsf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction des consultations dans le DCIR. — extract_consultations_erprsf","text":"","code":"extract_consultations_erprsf(   start_date,   end_date,   pse_spe_filter = NULL,   prestation_filter = NULL,   dis_dtd_lag_months = 6,   patients_ids_filter = NULL,   output_table_name = NULL,   conn = NULL )"},{"path":"/reference/extract_consultations_erprsf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction des consultations dans le DCIR. — extract_consultations_erprsf","text":"start_date Date. La date de début de la période des consultations à extraire. end_date Date. La date de fin de la période des consultations à extraire. pse_spe_filter Character vector (Optionnel). Les codes spécialités des médecins (référentiel IR_SPE_V) effectuant les consultations à extraire. Si pse_spe_filter n'est pas fourni, les consultations de tous les spécialités sont extraites. Défaut à NULL. prestation_filter Character vector (Optionnel). Les codes des prestations à extraire en norme B5 (colonne PRS_NAT_REF, référentiel IR_NAT_V). Si prestation_filter n'est pas fourni, les consultations de tous les prestations sont extraites. Les codes des prestations sont disponibles sur la page Cibler selon les natures de prestations de la documentation SNDS. Défaut à NULL. dis_dtd_lag_months Integer (Optionnel). Le nombre maximum de mois de décalage de FLX_DIS_DTD par rapport à EXE_SOI DTD pris en compte pour récupérer les consultations. Défaut à 6 mois. patients_ids_filter data frame (Optionnel). Un data frame contenant les paires d'identifiants des patients pour lesquels les consultations doivent être extraites. Les colonnes de ce data frame doivent être BEN_IDT_ANO, BEN_NIR_PSA et BEN_RNG_GEM. Les BEN_NIR_PSA doivent être tous les BEN_NIR_PSA associés aux BEN_IDT_ANO fournis. Défaut à NULL. output_table_name Character (Optionnel). Si fourni, les résultats seront sauvegardés dans une table portant ce nom dans la base de données au lieu d'être retournés sous forme de data frame. Si cette table existe déjà, le programme s'arrête avec un message d'erreur. Défaut à NULL. conn DBI connection (Optionnel). Une connexion à la base de données Oracle. Par défaut, une connexion est établie avec oracle.","code":""},{"path":"/reference/extract_consultations_erprsf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction des consultations dans le DCIR. — extract_consultations_erprsf","text":"Si output_table_name est NULL, retourne un data frame contenant les consultations. Si output_table_name est fourni, sauvegarde les résultats dans la table spécifiée dans Oracle et retourne NULL de manière invisible. Dans les deux cas les colonnes de la table de sortie sont : BEN_NIR_PSA : Colonne présente uniquement si les identifiants patients (patients_ids_filter) ne sont pas fournis. Identifiant SNDS, aussi appelé pseudo-NIR. BEN_IDT_ANO : Colonne présente uniquement si les identifiants patients (patients_ids_filter) sont fournis. Numéro d’inscription au répertoire (NIR) anonymisé. EXE_SOI_DTD : Date de la consultation.","code":""},{"path":"/reference/extract_consultations_erprsf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraction des consultations dans le DCIR. — extract_consultations_erprsf","text":"Le décalage de remontée des données est pris en compte en récupérant également les consultations dont les dates FLX_DIS_DTD sont comprises dans les dis_dtd_lag_months mois suivant end_date. Si patients_ids_filter est fourni, seules les consultations pour les patients dont les identifiants sont dans patients_ids_filter sont extraites. Dans le cas contraire, les consultations de tous les patients sont extraites. Pour être à flux constant sur l'ensemble des années, il faut utiliser dis_dtd_lag_months = 27 Cela rallonge le temps d'extraction alors que l'impact sur l'extraction est minime car la Cnam estime que 99 % des soins sont remontés à 6 mois c'est-à-dire pour dis_dtd_lag_months = 6. Un guide sur l'activité des médecins libéraux est disponibles sur la page Activité des médecins libéraux. #nolint","code":""},{"path":"/reference/extract_consultations_erprsf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraction des consultations dans le DCIR. — extract_consultations_erprsf","text":"","code":"if (FALSE) { # \\dontrun{ dispenses <- extract_consultations_erprsf(   start_date = as.Date(\"2010-01-01\"),   end_date = as.Date(\"2010-01-03\"),   pse_spe_filter = c(\"0\", \"00\", \"36\") ) } # }"},{"path":"/reference/extract_drug_dispenses.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction des délivrances de médicaments. — extract_drug_dispenses","title":"Extraction des délivrances de médicaments. — extract_drug_dispenses","text":"Cette fonction permet d'extraire les délivrances de médicaments par code ATC ou par code CIP13. Les délivrances dont les dates EXE_SOI_DTD sont comprises entre start_date et end_date (incluses) sont extraites.","code":""},{"path":"/reference/extract_drug_dispenses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction des délivrances de médicaments. — extract_drug_dispenses","text":"","code":"extract_drug_dispenses(   start_date,   end_date,   atc_cod_starts_with_filter = NULL,   cip13_cod_filter = NULL,   patients_ids_filter = NULL,   dis_dtd_lag_months = 6,   sup_columns = NULL,   output_table_name = NULL,   conn = NULL,   show_sql_query = TRUE )"},{"path":"/reference/extract_drug_dispenses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction des délivrances de médicaments. — extract_drug_dispenses","text":"start_date Date. La date de début de la période des délivrances des médicaments à extraire. end_date Date. La date de fin de la période des délivrances des médicaments à extraire. atc_cod_starts_with_filter Character vector (Optionnel). Les codes ATC par lesquels les délivrances de médicaments à extraire doivent commencer. Défaut à NULL. cip13_cod_filter Character vector (Optionnel). Les codes CIP des délivrances de médicaments à extraire en complément des codes ATC. Défaut à NULL. patients_ids_filter data.frame (Optionnel). Un data.frame contenant les paires d'identifiants des patients pour lesquels les délivrances de médicaments doivent être extraites. Les colonnes de ce data.frame doivent être \"BEN_IDT_ANO\" et \"BEN_NIR_PSA\". Les \"BEN_NIR_PSA\" doivent être tous les \"BEN_NIR_PSA\" associés aux \"BEN_IDT_ANO\" fournis. Défaut à NULL. dis_dtd_lag_months Integer (Optionnel). Le nombre maximum de mois de décalage de FLX_DIS_DTD par rapport à EXE_SOI DTD pris en compte pour récupérer les délivrances de médicaments. Défaut à 6 mois. sup_columns Character vector (Optionnel). Les colonnes supplémentaires à ajouter à la table de sortie. Défaut à NULL, donc aucune colonne ajoutée. output_table_name Character (Optionnel). Si fourni, les résultats seront sauvegardés dans une table portant ce nom dans la base de données au lieu d'être retournés sous forme de data frame. Si la table existe déjà dans la base oracle, alors le programme s'arrête en retournant une erreur. Défault à NULL. conn DBI connection (Optionnel). Une connexion à la base de données Oracle. Si non fournie, une connexion est établie par défaut. Défaut à NULL.","code":""},{"path":"/reference/extract_drug_dispenses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction des délivrances de médicaments. — extract_drug_dispenses","text":"Si output_table_name est NULL, retourne un data.frame contenant les délivrances de médicaments. Si output_table_name est fourni, sauvegarde les résultats dans la table spécifiée dans Oracle et retourne NULL de manière invisible. Dans les deux cas les colonnes de la table de sortie sont : BEN_NIR_PSA : Colonne présente uniquement si les identifiants patients (patients_ids_filter) ne sont pas fournis. Identifiant SNDS, aussi appelé pseudo-NIR. BEN_IDT_ANO : Colonne présente uniquement si les identifiants patients (patients_ids_filter) sont fournis. Numéro d’inscription au répertoire (NIR) anonymisé. EXE_SOI_DTD : Date de la délivrance PHA_ACT_QSN : Quantité délivrée PHA_ATC_CLA : Code ATC du médicament délivré PHA_PRS_C13 : Code CIP du médicament délivré (nom dans la table ER_PHA_F : PHA_PRS_C13, nom dans la table IR_PHA_R : PHA_CIP_C13) PSP_SPE_COD : Code de spécialité du professionnel de soin prescripteur (voir nomenclature IR_SPE_V) Les colonnes supplémentaires spécifiées dans sup_columns si fournies.","code":""},{"path":"/reference/extract_drug_dispenses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraction des délivrances de médicaments. — extract_drug_dispenses","text":"Le décalage de remontée des données est pris en compte en récupérant également les délivrances dont les dates FLX_DIS_DTD sont comprises dans les dis_dtd_lag_months mois suivant end_date. Si atc_cod_starts_with ou cip13_codes sont fournies, seules les délivrances de médicaments dont le code ATC commence par l'un des éléments de atc_cod_starts_with OU dont le code CIP13 est dans cip13_codes sont extraites. Dans le cas ou aucun des filtres n'est renseigné, les délivrances pour tous les codes ATC et CIP13 sont extraites. Si l'un des filtres est NULL, mais pas l'autre, seul les délivrances pour le filtre non NULL sont extraites. Si patients_ids_filter est fourni, seules les délivrances de médicaments pour les patients dont les identifiants sont dans patients_ids_filter sont extraites. Dans le cas contraire, les délivrances de tous les patients sont extraites. Pour être à flux constant sur l'ensemble des années, il faut utiliser dis_dtd_lag_months = 27 Cela rallonge le temps d'extraction alors que l'impact sur l'extraction est minime car la Cnam estime que 99 % des soins sont remontés à 6 mois, c'est-à-dire pour dis_dtd_lag_months = 6.","code":""},{"path":"/reference/extract_drug_dispenses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraction des délivrances de médicaments. — extract_drug_dispenses","text":"","code":"if (FALSE) { # \\dontrun{ start_date <- as.Date(\"2010-01-01\") end_date <- as.Date(\"2010-01-03\") atc_cod_starts_with <- c(\"N04A\")  dispenses <- extract_drug_dispenses(   start_date = start_date,   end_date = end_date,   atc_cod_starts_with = atc_cod_starts_with ) } # }"},{"path":"/reference/extract_hospital_consultations.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction des consultations externes à l'hôpital (MCO). — extract_hospital_consultations","title":"Extraction des consultations externes à l'hôpital (MCO). — extract_hospital_consultations","text":"Cette fonction permet d'extraire les consultations à l'hôpital en MCO. Les consultations dont les dates EXE_SOI_DTD sont comprises entre start_date et end_date sont extraites.","code":""},{"path":"/reference/extract_hospital_consultations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction des consultations externes à l'hôpital (MCO). — extract_hospital_consultations","text":"","code":"extract_hospital_consultations(   start_date,   end_date,   spe_codes_filter = NULL,   prestation_codes_filter = NULL,   patient_ids_filter = NULL,   output_table_name = NULL,   conn = NULL )"},{"path":"/reference/extract_hospital_consultations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction des consultations externes à l'hôpital (MCO). — extract_hospital_consultations","text":"start_date Date La date de début de la période sur laquelle extraire les consultations. end_date Date La date de fin de la période sur laquelle extraire les consultations. spe_codes_filter character vector Optionnel. Les codes spécialités des médecins effectuant les consultations à extraire. Si spe_codes n'est pas fourni, les consultations de tous les spécialités sont extraites. prestation_codes_filter character vector Optionnel. Les codes des prestations à extraire. Si prestation_codes n'est pas fourni, les consultations de tous les prestations sont extraites. Les codes des prestations sont disponibles sur la page actes et consultations externes de la documentation SNDS. patient_ids_filter data.frame Optionnel. Un data.frame contenant les paires d'identifiants des patients pour lesquels les consultations doivent être extraites. Les colonnes de ce data.frame doivent être BEN_IDT_ANO et BEN_NIR_PSA (en majuscules). Les BEN_NIR_PSA doivent être tous les BEN_NIR_PSA associés aux BEN_IDT_ANO fournis. Si patients_ids n'est pas fourni, les consultations de tous les patients sont extraites. output_table_name character Optionnel. Le nom de la table de sortie dans la base de données. Si output_table_name n'est pas fourni, une table de sortie intermédiaire est créée en R. Si output_table_name est fourni mais que cette table existe déjà dans oracle, le programme s'arrête avec un message d'erreur. conn dbConnection La connexion à la base de données. Si conn n'est pas fourni, une connexion à la base de données est initialisée. Par défaut, une connexion est établie avec oracle.","code":""},{"path":"/reference/extract_hospital_consultations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction des consultations externes à l'hôpital (MCO). — extract_hospital_consultations","text":"Un data.frame contenant les consultations. Les colonnes sont les suivantes : BEN_IDT_ANO : Identifiant bénéficiaire anonymisé (seulement si patient_ids non nul) NIR_ANO_17 : NIR anonymisé EXE_SOI_DTD : Date de la délivrance ACT_COD : Code de l'acte EXE_SPE : Code de spécialité du professionnel de soin prescripteur","code":""},{"path":"/reference/extract_hospital_consultations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraction des consultations externes à l'hôpital (MCO). — extract_hospital_consultations","text":"Si spe_codes est renseigné, seules les consultations des spécialités correspondantes sont extraites. Si prestation_codes est renseigné, seules les consultations des prestations correspondantes sont extraites. Si patients_ids est fourni, seules les délivrances de médicaments pour les patients dont les identifiants sont dans patients_ids sont extraites.","code":""},{"path":"/reference/extract_hospital_consultations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraction des consultations externes à l'hôpital (MCO). — extract_hospital_consultations","text":"","code":"if (FALSE) { # \\dontrun{ extract_hospital_consultations(   start_date = as.Date(\"2019-01-01\"),   end_date = as.Date(\"2019-12-31\"),   spe_codes = c(\"01\", \"02\") ) } # }"},{"path":"/reference/extract_long_term_disease.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction des Affections Longue Durée (ALD) — extract_long_term_disease","title":"Extraction des Affections Longue Durée (ALD) — extract_long_term_disease","text":"Cette fonction permet d'extraire des ALD actives au moins un jour sur une période donnée. Les ALD dont l'intersection IMB_ALD_DTD, IMB_ALD_DTF avec la période start_date, end_date n'est pas vide sont extraites. Si des codes ICD 10 ou des numéros d'ALD sont fournis, seules les ALD associées à ces codes ICD 10 ou numéros d'ALD sont extraites. Dans le cas contraire, toutes les ALD sont extraites. Si des identifiants de patients sont fournis, seules les ALD associées à ces patients sont extraites. Dans le cas contraire, les ALD de tous les patients sont extraites.","code":""},{"path":"/reference/extract_long_term_disease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction des Affections Longue Durée (ALD) — extract_long_term_disease","text":"","code":"extract_long_term_disease(   start_date = NULL,   end_date = NULL,   icd_cod_starts_with = NULL,   ald_numbers = NULL,   excl_etm_nat = c(\"11\", \"12\", \"13\"),   patients_ids = NULL,   output_table_name = NULL,   overwrite = FALSE,   conn = NULL )"},{"path":"/reference/extract_long_term_disease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction des Affections Longue Durée (ALD) — extract_long_term_disease","text":"start_date Date La date de début de la période sur laquelle extraire les ALD actives. end_date Date La date de fin de la période sur laquelle extraire les ALD actives. icd_cod_starts_with character vector Un vecteur de codes ICD 10. Si icd_cod_starts_with ou ald_numbers sont fournis, seules les ALD associées à ces codes ICD 10 ou numéros d'ALD sont extraites. Sinon, toutes les ALD actives sur la période start_date, end_date sont extraites. ald_numbers numeric vector Un vecteur de numéros d'ALD. Si icd_cod_starts_with ou ald_numbers sont fournis, seules les ALD associées à ces codes ICD 10 ou numéros d'ALD sont extraites. Sinon, toutes les ALD actives sur la période start_date, end_date sont extraites. excl_etm_nat character vector Un vecteur de codes IMB_ETM_NAT à exclure. Par défaut, les ALD de nature 11, 12 et 13 sont exclues car elles correspondent à des exonérations pour accidents du travail ou maladies professionnelles. Voir la fiche sur les ALD de la documentation du SNDS. et notamment le Programme #1 pour la référence de ce filtre. patients_ids data.frame Optionnel. Un data.frame contenant les paires d'identifiants des patients pour lesquels les délivrances de médicaments doivent être extraites. Les colonnes de ce data.frame doivent être \"BEN_IDT_ANO\" et \"BEN_NIR_PSA\". Les \"BEN_NIR_PSA\" doivent être tous les \"BEN_NIR_PSA\" associés aux \"BEN_IDT_ANO\" fournis. output_table_name Character Optionnel. Si fourni, les résultats seront sauvegardés dans une table portant ce nom dans la base de données au lieu d'être retournés sous forme de data frame. overwrite Logical. Indique si la table output_table_name doit être écrasée dans le cas où elle existe déjà. conn DBI connection Une connexion à la base de données Oracle. Si non fournie, une connexion est établie par défaut.","code":""},{"path":"/reference/extract_long_term_disease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction des Affections Longue Durée (ALD) — extract_long_term_disease","text":"Si output_table_name est NULL, retourne un data.frame contenant les les ALDs actives sur la période. Si output_table_name est fourni, sauvegarde les résultats dans la table spécifiée dans Oracle et retourne NULL de manière invisible. Dans les deux cas les colonnes de la table de sortie sont : BEN_NIR_PSA : Colonne présente uniquement si les identifiants patients (patients_ids) ne sont pas fournis. Identifiant SNDS, ausi appelé pseudo-NIR. BEN_IDT_ANO : Colonne présente uniquement si les identifiants patients (patients_ids) sont fournis. Numéro d’inscription au répertoire (NIR) anonymisé. IMB_ALD_NUM : Le numéro de l'ALD IMB_ALD_DTD : La date de début de l'ALD IMB_ALD_DTF : La date de fin de l'ALD IMB_ETM_NAT : La nature de l'ALD MED_MTF_COD : Le code ICD 10 de la pathologie associée à l'ALD","code":""},{"path":"/reference/extract_long_term_disease.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraction des Affections Longue Durée (ALD) — extract_long_term_disease","text":"","code":"if (FALSE) { # \\dontrun{ start_date <- as.Date(\"2010-01-01\") end_date <- as.Date(\"2010-01-03\") icd_cod_starts_with <- c(\"G20\")  long_term_disease <- extract_long_term_disease(   start_date = start_date,   end_date = end_date,   icd_cod_starts_with = icd_cod_starts_with ) } # }"},{"path":"/reference/gather_table_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupération des statistiques des tables — gather_table_stats","title":"Récupération des statistiques des tables — gather_table_stats","text":"Récupération des statistiques des tables","code":""},{"path":"/reference/gather_table_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupération des statistiques des tables — gather_table_stats","text":"","code":"gather_table_stats(conn, table)"},{"path":"/reference/gather_table_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupération des statistiques des tables — gather_table_stats","text":"conn Connexion à la base de données table Chaine de caractère indiquant le nom d'une table","code":""},{"path":"/reference/gather_table_stats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Récupération des statistiques des tables — gather_table_stats","text":"https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/DBMS_STATS.html#GUID-CA6A56B9-0540-45E9-B1D7-D78769B7714C #nolint","code":""},{"path":"/reference/get_first_non_archived_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupération de l'année non archivée la plus ancienne de la table ER_PRS_F. — get_first_non_archived_year","title":"Récupération de l'année non archivée la plus ancienne de la table ER_PRS_F. — get_first_non_archived_year","text":"Récupération de l'année non archivée la plus ancienne de la table ER_PRS_F.","code":""},{"path":"/reference/get_first_non_archived_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupération de l'année non archivée la plus ancienne de la table ER_PRS_F. — get_first_non_archived_year","text":"","code":"get_first_non_archived_year(conn)"},{"path":"/reference/get_first_non_archived_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupération de l'année non archivée la plus ancienne de la table ER_PRS_F. — get_first_non_archived_year","text":"conn Connexion à la base de données","code":""},{"path":"/reference/get_first_non_archived_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Récupération de l'année non archivée la plus ancienne de la table ER_PRS_F. — get_first_non_archived_year","text":"Année non archivée la plus ancienne","code":""},{"path":"/reference/insert_into_table_from_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Insertion des résultats d'une requête SQL dans une table existante. — insert_into_table_from_query","title":"Insertion des résultats d'une requête SQL dans une table existante. — insert_into_table_from_query","text":"Insertion des résultats d'une requête SQL dans une table existante.","code":""},{"path":"/reference/insert_into_table_from_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insertion des résultats d'une requête SQL dans une table existante. — insert_into_table_from_query","text":"","code":"insert_into_table_from_query(   conn = NULL,   output_table_name = NULL,   query = NULL )"},{"path":"/reference/insert_into_table_from_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insertion des résultats d'une requête SQL dans une table existante. — insert_into_table_from_query","text":"conn Connexion à la base de données output_table_name Nom de la table de sortie query Requête SQL","code":""},{"path":"/reference/insert_synthetic_snds.html","id":null,"dir":"Reference","previous_headings":"","what":"Charge et insère les données synthétiques du SNDS dans une base de données temporaire — insert_synthetic_snds","title":"Charge et insère les données synthétiques du SNDS dans une base de données temporaire — insert_synthetic_snds","text":"Cette fonction charge les données synthétiques du SNDS à partir d'un fichier zip contenu dans le répertoire synthetic_data.zip. Ensuite elle insère chaque table dans une base de données temporaire.","code":""},{"path":"/reference/insert_synthetic_snds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Charge et insère les données synthétiques du SNDS dans une base de données temporaire — insert_synthetic_snds","text":"","code":"insert_synthetic_snds(conn)"},{"path":"/reference/insert_synthetic_snds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Charge et insère les données synthétiques du SNDS dans une base de données temporaire — insert_synthetic_snds","text":"conn Connexion à la base de données","code":""},{"path":"/reference/insert_synthetic_snds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Charge et insère les données synthétiques du SNDS dans une base de données temporaire — insert_synthetic_snds","text":"","code":"# Connexion à la base de données conn <- connect_duckdb() #> [1] \"Le code ne s'exécute pas sur le portail CNAM.\\n    Initialisation d'une connexion duckdb en mémoire.\" # Insérer les données synthétiques insert_synthetic_snds(conn) # Vérifier les tables insérées tables <- DBI::dbListTables(conn) print(tables[1:10]) #>  [1] \"CT_DEP_AAAA_GN\" \"CT_IDE_AAAA_GN\" \"CT_IND_AAAA_GN\" \"ER_ANO_F\"       #>  [5] \"ER_ARO_F\"       \"ER_BIO_F\"       \"ER_CAM_F\"       \"ER_CPT_F\"       #>  [9] \"ER_DCT_F\"       \"ER_DTR_F\""},{"path":"/reference/load_synthetic_snds.html","id":null,"dir":"Reference","previous_headings":"","what":"Charger les données synthétiques du SNDS — load_synthetic_snds","title":"Charger les données synthétiques du SNDS — load_synthetic_snds","text":"Cette fonction charge les données synthétiques du SNDS à partir d'un fichier zip contenu dans le répertoire synthetic_data.zip. Ce fichier zip contient un fichier CSV pour chaque table du SDNS.","code":""},{"path":"/reference/load_synthetic_snds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Charger les données synthétiques du SNDS — load_synthetic_snds","text":"","code":"load_synthetic_snds()"},{"path":"/reference/load_synthetic_snds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Charger les données synthétiques du SNDS — load_synthetic_snds","text":"Une liste de data frames, chacun correspondant à un fichier CSV dans le zip.","code":""},{"path":"/reference/load_synthetic_snds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Charger les données synthétiques du SNDS — load_synthetic_snds","text":"Le fichier zip synthetic_data.zip été obtenu en téléchargeant les données fictives du SNDS disponible sur datagouv.fr. Ces données ont été générées en 2019 grâce au schéma formel du SNDS et au projet synthetic-generator. Ces données ne respectent pas les contraintes métier de la base de données réelle. Par exemple, dans les données fictives, les dates de flux sont générées aléatoirement par rapport aux dates de soin alors que dans la vraie base de données, les dates de flux sont toujours postérieures aux dates de soin.","code":""},{"path":"/reference/load_synthetic_snds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Charger les données synthétiques du SNDS — load_synthetic_snds","text":"","code":"# Charger les données synthétiques donnees_synthetiques <- load_synthetic_snds() # Accéder à un data frame spécifique #' df <- donnees_synthetiques[[\"ER_PRS_F\"]] #' # Afficher les premières lignes du data frame #' print(head(df))"},{"path":"/reference/sql_extract_drug_dispenses.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction des délivrances de médicaments à partir de SQL injecté dans du R (modèle dbExecute de Thomas Soeiro). — sql_extract_drug_dispenses","title":"Extraction des délivrances de médicaments à partir de SQL injecté dans du R (modèle dbExecute de Thomas Soeiro). — sql_extract_drug_dispenses","text":"Cette fonction permet d'extraire les délivrances de médicaments par code ATC ou par code CIP13. Les délivrances dont les dates EXE_SOI_DTD sont comprises entre start_date et end_date (incluses) sont extraites.","code":""},{"path":"/reference/sql_extract_drug_dispenses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction des délivrances de médicaments à partir de SQL injecté dans du R (modèle dbExecute de Thomas Soeiro). — sql_extract_drug_dispenses","text":"","code":"sql_extract_drug_dispenses(   start_date,   end_date,   output_table_name,   atc_cod_starts_with_filter = NULL,   cip13_cod_filter = NULL,   conn = NULL )"},{"path":"/reference/sql_extract_drug_dispenses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction des délivrances de médicaments à partir de SQL injecté dans du R (modèle dbExecute de Thomas Soeiro). — sql_extract_drug_dispenses","text":"start_date Date. La date de début de la période des délivrances des médicaments à extraire. end_date Date. La date de fin de la période des délivrances des médicaments à extraire. output_table_name Character (Optionnel). Si fourni, les résultats seront sauvegardés dans une table portant ce nom dans la base de données au lieu d'être retournés sous forme de data frame. Défault à NULL. atc_cod_starts_with_filter Character vector (Optionnel). Les codes ATC par lesquels les délivrances de médicaments à extraire doivent commencer. Défaut à NULL. cip13_cod_filter Character vector (Optionnel). Les codes CIP des délivrances de médicaments à extraire en complément des codes ATC. Défaut à NULL. conn DBI connection (Optionnel). Une connexion à la base de données Oracle. Si non fournie, une connexion est établie par défaut. Défaut à NULL.","code":""}]
